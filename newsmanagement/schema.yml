openapi: 3.0.3
info:
  title: News Management
  version: 1.0.0
  description: A Django project to manage articles and users in a newspaper
paths:
  /api/articles/:
    get:
      operationId: api_articles_list
      parameters:
      - in: header
        name: Authorization
        schema:
          type: string
        description: Authorization token
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - api
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedArticleList'
          description: ''
    post:
      operationId: api_articles_create
      tags:
      - api
      parameters:
      - in: header
        name: Authorization
        schema:
          type: string
        description: Authorization token
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                body:
                  type: string
                  description: Article description
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Article'
          description: ''
  /api/articles/{id}/:
    put:
      operationId: api_articles_update
      tags:
      - api
      parameters:
      - in: header
        name: Authorization
        schema:
          type: string
        description: Authorization token
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this article.
        required: 'true'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                body:
                  type: string
                  description: Article description
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Article'
          description: ''
    delete:
      operationId: api_articles_destroy
      parameters:
      - in: header
        name: Authorization
        schema:
          type: string
        description: Authorization token
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this article.
        required: true
      tags:
      - api
      responses:
        '204':
          description: No response body
  /api/articles/{id}/favorite/:
    post:
      operationId: api_articles_favorite_unfavorite_2
      description: Favorite/Unfavorite article (POST for favorite, DELETE for unfavorite)
      tags:
      - api
      parameters:
      - in: header
        name: Authorization
        schema:
          type: string
        description: Authorization token
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this article.
        required: 'true'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Article'
          description: ''
    delete:
      operationId: api_articles_favorite_unfavorite
      description: Favorite/Unfavorite article (POST for favorite, DELETE for unfavorite)
      tags:
      - api
      parameters:
      - in: header
        name: Authorization
        schema:
          type: string
        description: Authorization token
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this article.
        required: 'true'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Article'
          description: ''
  /api/login/:
    post:
      operationId: api_login
      description: User login
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  created_at:
                    type: string
                    format: date-time
                  updated_at:
                    type: string
                    format: date-time
                  email:
                    type: string
                    maxLength: 255
                  username:
                    type: string
                    maxLength: 255
                  fullname:
                    type: string
                    maxLength: 128
                  token:
                    type: string
                    maxLength: 40
          description: ''
  /api/users/:
    get:
      operationId: api_users_list
      parameters:
      - in: header
        name: Authorization
        schema:
          type: string
        description: Authorization token
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - api
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUserList'
          description: ''
    post:
      operationId: api_users_create
      parameters:
      - in: header
        name: Authorization
        schema:
          type: string
        description: Authorization token
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/users/{email}/:
    delete:
      operationId: api_users_destroy
      parameters:
      - in: header
        name: Authorization
        schema:
          type: string
        description: Authorization token
      - in: path
        name: email
        schema:
          type: string
          pattern: ^\w+([.-]?\w+)*@\w+([.-]?\w+)*(\.\w{2,3})+$
        required: true
      tags:
      - api
      responses:
        '204':
          description: No response body
components:
  schemas:
    Article:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: Created date
        updated_at:
          type: string
          format: date-time
          readOnly: true
          description: Updated date
        title:
          type: string
          nullable: true
          maxLength: 250
        body:
          type: string
          nullable: true
          description: Article description
        favourite_count:
          type: integer
          maximum: 18446744073709551615
          minimum: 0
          format: int64
          description: Number of favorite of an article
      required:
      - created_at
      - id
      - updated_at
    PaginatedArticleList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Article'
    PaginatedUserList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/User'
    User:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: Created date
        updated_at:
          type: string
          format: date-time
          readOnly: true
          description: Updated date
        email:
          type: string
          maxLength: 255
        username:
          type: string
          maxLength: 255
        fullname:
          type: string
          maxLength: 128
      required:
      - created_at
      - email
      - fullname
      - id
      - updated_at
      - username
